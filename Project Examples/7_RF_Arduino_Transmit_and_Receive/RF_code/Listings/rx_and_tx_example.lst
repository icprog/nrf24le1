C51 COMPILER V9.56.0.0   RX_AND_TX_EXAMPLE                                                 06/08/2018 19:27:25 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE RX_AND_TX_EXAMPLE
OBJECT MODULE PLACED IN .\Objects\rx_and_tx_example.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE rx_and_tx_example.c OPTIMIZE(8,SPEED) BROWSE INCDIR(C:\Nordic Semiconduc
                    -tor\nRFgo SDK 2.3.0.10040\source_code\hal\nrf24le1;C:\Nordic Semiconductor\nRFgo SDK 2.3.0.10040\source_code\hal;C:\Nord
                    -ic Semiconductor\nRFgo SDK 2.3.0.10040\source_code\compiler;C:\Nordic Semiconductor\nRFgo SDK 2.3.0.10040\source_code\co
                    -mpiler\common;..\..\..\nRF24LE1\libraries) DEBUG OBJECTEXTEND PRINT(.\Listings\rx_and_tx_example.lst) TABS(2) OBJECT(.\O
                    -bjects\rx_and_tx_example.obj)

line level    source

   1          #include<Nordic\reg24le1.h> // Registradores do nrf24le1
   2          #include<hal_delay.h> // H.AL para as funções de delay
   3          #include<nRF-SPICommands.h> // Comunicacao RF, desenvolvida pelo prof. Sergio Ricardo de Jesus Oliveira
   4          
   5          // Endereço de recepção, pode ser qualquer conjunto de 5 números
   6          // Coloquei 0x42 por que 42 é um belo número
   7          uint8_t code endereco_nrf24le1[5] = {0x42, 0x42, 0x42, 0x42, 0x42};
   8          // O endereço de transmissão pode ser o mesmo de transmissão caso deseje
   9          // Eu coloquei 0x2A por que é 42 em hexadecimal e acho 42 um número legal
  10          uint8_t code endereco_arduino[5] = {0x2A, 0x2A, 0x2A, 0x2A, 0x2A};
  11          
  12          
  13          void setup(){
  14   1          // Inicializa os pinos do Port 0 e Port 1 todos como entradas.
  15   1          P0DIR = 0xFF; P1DIR = 0xFF;
  16   1          // Configura o pino 3 do Port 0 como saída
  17   1          P0DIR &= ~(1 << 3);
  18   1          // Configura os pinos 4 e 5 como entradas
  19   1          P0DIR |= 1 << 4;
  20   1          P0DIR |= 1 << 5;
  21   1      
  22   1          // Inicializa a comunicacao por radio frequencia
  23   1          rf_init(endereco_arduino, endereco_nrf24le1, 92, RF_DATA_RATE_2Mbps, RF_TX_POWER_0dBm);
  24   1      }
  25          
  26          void loop(){
  27   1          if(!P04){
  28   2              tx_buf[0] = 'G';
  29   2              TX_Mode_NOACK(1);
  30   2          }
  31   1      
  32   1          if(!P05){
  33   2              tx_buf[0] = 'B';
  34   2              TX_Mode_NOACK(1);
  35   2          }
  36   1      
  37   1          if(newPayload){
  38   2              newPayload = 0;
  39   2              switch(rx_buf[0]){
  40   3                  case 'L':
  41   3                  P03 = 1;
  42   3                  break;
  43   3                  case 'D':
  44   3                  P03 = 0;
  45   3                  break;
  46   3                  default:
  47   3                  P03 = !P03; delay_ms(500);
  48   3                  P03 = !P03; delay_ms(500);
  49   3                  break;
  50   3              }
  51   2          }
C51 COMPILER V9.56.0.0   RX_AND_TX_EXAMPLE                                                 06/08/2018 19:27:25 PAGE 2   

  52   1          
  53   1          tx_buf[0] = 'B';
  54   1          TX_Mode_NOACK(1);
  55   1          delay_ms(1000);
  56   1          tx_buf[0] = 'G';
  57   1          TX_Mode_NOACK(1);
  58   1          delay_ms(1000);
  59   1      }
  60          
  61          /**
  62           * Função Main, indicando como funcionará o sitema.
  63           * Ele está simplificado para funcionar semelhante ao arduino.
  64           */
  65          void main(){
  66   1          setup();
  67   1          while(1){
  68   2              loop();
  69   2          }
  70   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    693    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     66      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
